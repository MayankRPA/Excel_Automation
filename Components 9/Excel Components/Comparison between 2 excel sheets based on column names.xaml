<Activity mc:Ignorable="sap sap2010 sads" x:Class="Flowchart"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Out_Exception" Type="InArgument(x:String)" />
    <x:Property Name="FileDetailsDic" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="In_TransactionData" Type="InArgument(scg:Dictionary(x:String, sd:DataTable))" />
    <x:Property Name="DestinationPath" Type="InArgument(x:String)" />
    <x:Property Name="TransactionData" Type="InArgument(scg:Dictionary(x:String, sd:DataTable))" />
    <x:Property Name="TaskDictionary" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="ModuleConfigData" Type="InArgument(scg:Dictionary(x:String, sd:DataTable))" />
    <x:Property Name="InTask" Type="InArgument(x:String)" />
    <x:Property Name="In_ModuleConfigPath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Flowchart_2</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="AddingSubtracting values and comparing  " sap2010:WorkflowViewState.IdRef="Sequence_6">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="EmptyFields" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="ExcelSheet1" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="ExcelSheet2" />
      <Variable x:TypeArguments="sd:DataTable" Name="Out_FileNamePath" />
      <Variable x:TypeArguments="x:Int32" Name="RetryCounter" />
      <Variable x:TypeArguments="x:String" Name="Sheet2" />
    </Sequence.Variables>
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="FirstRun" />
        <Variable x:TypeArguments="x:String" Name="Filename" />
        <Variable x:TypeArguments="ui:GenericValue" Name="Task" />
        <Variable x:TypeArguments="x:String" Name="SourcePath" />
        <Variable x:TypeArguments="x:String" Name="SheetName" />
        <Variable x:TypeArguments="sd:DataTable" Name="DataTable1" />
        <Variable x:TypeArguments="x:String" Name="Range" />
        <Variable x:TypeArguments="x:String" Name="SheetnameModule" />
        <Variable x:TypeArguments="sd:DataTable" Name="ModuleData" />
        <Variable x:TypeArguments="x:String" Name="SheetNameTask" />
        <Variable x:TypeArguments="x:String" Name="Parameter" />
        <Variable x:TypeArguments="x:String" Name="Sheet1" />
        <Variable x:TypeArguments="s:String[]" Name="SheetTask" />
        <Variable x:TypeArguments="x:String" Name="ResultColumn" />
        <Variable x:TypeArguments="sd:DataTable" Name="DataTable2" />
      </TryCatch.Variables>
      <TryCatch.Try>
        <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_3">
          <Flowchart.StartNode>
            <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_26">
              <Sequence DisplayName="Read Data" sap2010:WorkflowViewState.IdRef="Sequence_124">
                <Sequence sap2010:Annotation.AnnotationText="Read the Task configuration of the module config" DisplayName="Task configuration" sap2010:WorkflowViewState.IdRef="Sequence_113">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="ui:WorkbookApplication" Name="ModuleConfig" />
                  </Sequence.Variables>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_89">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[TransactionData]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[new Dictionary(of String, DataTable)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_90">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[TaskDictionary]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(Of String, String)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_91">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[ModuleConfigData]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, sd:DataTable)">[new Dictionary(of String, DataTable)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:FilterDataTable DataTable="[In_TransactionData(&quot;Range of Module&quot;)]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[In_TransactionData(&quot;Range of Module&quot;)]" SelectColumnsMode="Keep">
                    <ui:FilterDataTable.Filters>
                      <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                        <ui:FilterOperationArgument BooleanOperator="And" Operator="CONTAINS">
                          <ui:FilterOperationArgument.Column>
                            <InArgument x:TypeArguments="x:String">["Excel Component"]</InArgument>
                          </ui:FilterOperationArgument.Column>
                          <ui:FilterOperationArgument.Operand>
                            <InArgument x:TypeArguments="x:String">[InTask]</InArgument>
                          </ui:FilterOperationArgument.Operand>
                        </ui:FilterOperationArgument>
                      </scg:List>
                    </ui:FilterDataTable.Filters>
                    <ui:FilterDataTable.SelectColumns>
                      <scg:List x:TypeArguments="InArgument" Capacity="4">
                        <x:Null />
                      </scg:List>
                    </ui:FilterDataTable.SelectColumns>
                  </ui:FilterDataTable>
                  <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[In_TransactionData(&quot;Range of Module&quot;)]" DisplayName="For Each Row" sap2010:WorkflowViewState.IdRef="ForEachRow_13">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_107">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_92">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Range]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[row("Range").ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_93">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[SheetnameModule]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[row("Sheet Name").ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_16" Workbook="[ModuleConfig]" WorkbookPath="[In_ModuleConfigPath]">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_110">
                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[ModuleConfig.GetSheets]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:Object">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_109">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_94">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[SheetName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[item.ToString.Trim]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If Condition="[SheetName=SheetnameModule]" sap2010:WorkflowViewState.IdRef="If_39">
                                    <If.Then>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_108">
                                        <ui:ExcelReadRange AddHeaders="True" DataTable="[ModuleData]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_20" Range="[Range]" SheetName="[SheetName]" />
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_95">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="sd:DataTable">[ModuleConfigData("Adding/Subtracting values and comparing")]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="sd:DataTable">[ModuleData]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                        </Sequence>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                  </ui:ExcelApplicationScope>
                  <If Condition="[ModuleConfig isnot nothing]" sap2010:WorkflowViewState.IdRef="If_40">
                    <If.Then>
                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_14" Workbook="[ModuleConfig]" />
                    </If.Then>
                  </If>
                  <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[ModuleConfigData(&quot;Adding/Subtracting values and comparing&quot;)]" DisplayName="For Each Row" sap2010:WorkflowViewState.IdRef="ForEachRow_14">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_111">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_96">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[TaskDictionary(row.Item(0).ToString.Trim)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[row.Item(1).ToString.Trim]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                  <Sequence DisplayName="Dictionary" sap2010:WorkflowViewState.IdRef="Sequence_112">
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_99">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Sheet1]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[TaskDictionary("Sheet Name 1")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_117">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[EmptyFields]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[if(String.IsNullOrEmpty(Sheet1), EmptyFields +  " Sheet1 is not available", EmptyFields )]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_105">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Sheet2]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[TaskDictionary("Sheet Name 2")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_118">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[EmptyFields]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[if(String.IsNullOrEmpty(Sheet1), EmptyFields +  " Sheet1 is not available", EmptyFields )]</InArgument>
                      </Assign.Value>
                    </Assign>
                  </Sequence>
                </Sequence>
                <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Read Sheet1" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_17" Visible="False" Workbook="[ExcelSheet1]" WorkbookPath="[DestinationPath]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_122">
                        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_21" Values="[ExcelSheet1.GetSheets]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="x:Object">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                              </ActivityAction.Argument>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_150">
                                <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_149">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_133">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[SheetName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If Condition="[Sheet1=SheetName]" sap2010:WorkflowViewState.IdRef="If_59">
                                    <If.Then>
                                      <ui:ExcelReadRange AddHeaders="True" DataTable="[DataTable1]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_30" SheetName="[SheetName]">
                                        <ui:ExcelReadRange.Range>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </ui:ExcelReadRange.Range>
                                      </ui:ExcelReadRange>
                                    </If.Then>
                                  </If>
                                </Sequence>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_134">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="sd:DataTable">[TransactionData(item.ToString)]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="sd:DataTable">[DataTable1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[Sheet2=SheetName]" sap2010:WorkflowViewState.IdRef="If_60">
                                  <If.Then>
                                    <ui:ExcelReadRange AddHeaders="True" DataTable="[DataTable2]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_31" SheetName="[SheetName]">
                                      <ui:ExcelReadRange.Range>
                                        <InArgument x:TypeArguments="x:String">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </ui:ExcelReadRange.Range>
                                    </ui:ExcelReadRange>
                                  </If.Then>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
                <Sequence DisplayName="Close Excel workbook" sap2010:WorkflowViewState.IdRef="Sequence_123">
                  <If Condition="[ExcelSheet1 IsNot Nothing]" sap2010:WorkflowViewState.IdRef="If_43">
                    <If.Then>
                      <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_15" Workbook="[ExcelSheet1]" />
                    </If.Then>
                  </If>
                </Sequence>
              </Sequence>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID1" Condition="[string.IsNullOrEmpty(EmptyFields)]" DisplayName="Flow Decision" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_28">
                      <Sequence DisplayName="Comparison" sap2010:WorkflowViewState.IdRef="Sequence_144">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd:DataColumn[]" Name="allColumns" />
                          <Variable x:TypeArguments="x:String" Name="ColumnName_2" />
                          <Variable x:TypeArguments="x:String" Name="DataCheck" />
                          <Variable x:TypeArguments="sd:DataTable" Name="NewDataCollection" />
                          <Variable x:TypeArguments="x:Boolean" Name="ToAppend" />
                        </Sequence.Variables>
                        <ui:BuildDataTable DataTable="[NewDataCollection]" DisplayName="Build Data Table" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                        <Assign DisplayName="Initialize all columns array" sap2010:WorkflowViewState.IdRef="Assign_124">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataColumn[]">[allColumns]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataColumn[]">[new DataColumn(DataTable1.Columns.Count) {}]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="CopyTo">
                          <InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="sd:DataColumnCollection">[DataTable1.Columns]</InArgument>
                          </InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="sd:DataColumn[]">[allColumns]</InArgument>
                          <InArgument x:TypeArguments="x:Int32">0</InArgument>
                        </InvokeMethod>
                        <ui:CommentOut DisplayName="Comment Out" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                          <ui:CommentOut.Body>
                            <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_140">
                              <Assign DisplayName="Set PrimaryKey" sap2010:WorkflowViewState.IdRef="Assign_125">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="sd:DataColumn[]">[DataTable1.PrimaryKey]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="sd:DataColumn[]">[allColumns]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </ui:CommentOut.Body>
                        </ui:CommentOut>
                        <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_18" Values="[DataTable2.Columns]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="sd:DataColumn">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="col" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_142">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_126">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[ColumnName_2]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[col.ColumnName]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <If Condition="[DataTable1.Columns.Contains(ColumnName_2)]" sap2010:WorkflowViewState.IdRef="If_51">
                                  <If.Else>
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_141">
                                      <ui:AddDataColumn x:TypeArguments="x:String" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="False" AutoIncrement="False" ColumnName="[ColumnName_2]" DataTable="[NewDataCollection]" DisplayName="Add Data Column" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2" MaxLength="0" Unique="False" />
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_127">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">[ToAppend]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:ForEach.Body>
                        </ui:ForEach>
                        <If Condition="[ToAppend=True]" sap2010:WorkflowViewState.IdRef="If_52">
                          <If.Then>
                            <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_18" Visible="False" Workbook="[ExcelSheet2]" WorkbookPath="[DestinationPath]">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_143">
                                    <ui:ExcelWriteRange AddHeaders="True" DataTable="[NewDataCollection]" DisplayName="Write Range" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_9" SheetName="Column Names">
                                      <ui:ExcelWriteRange.StartingCell>
                                        <InArgument x:TypeArguments="x:String">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </ui:ExcelWriteRange.StartingCell>
                                    </ui:ExcelWriteRange>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                            </ui:ExcelApplicationScope>
                          </If.Then>
                          <If.Else>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_128">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[DataCheck]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Both DataTables hav same column names</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Else>
                        </If>
                      </Sequence>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_27">
                      <Sequence DisplayName="Error" sap2010:WorkflowViewState.IdRef="Sequence_137">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_120">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Out_Exception]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[EmptyFields]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[Out_Exception]" />
                        <Throw Exception="[new exception]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                      </Sequence>
                    </FlowStep>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
          </Flowchart.StartNode>
          <x:Reference>__ReferenceID0</x:Reference>
          <x:Reference>__ReferenceID1</x:Reference>
          <x:Reference>__ReferenceID2</x:Reference>
          <x:Reference>__ReferenceID3</x:Reference>
        </Flowchart>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[Out_Exception]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[exception.ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence DisplayName="Close Excel workbook" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <If Condition="[ExcelSheet1 IsNot Nothing]" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_1" Workbook="[ExcelSheet1]" />
            </If.Then>
          </If>
          <If Condition="[ExcelSheet2 IsNot Nothing]" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <ui:ExcelCloseWorkbook DisplayName="Close Workbook" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_2" Workbook="[ExcelSheet2]" />
            </If.Then>
          </If>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
    <sads:DebugSymbol.Symbol>d50BWjpcNi4gQVRfSW5kaXZpZHVhbCBGb2xkZXJzXE11ZmFkZGFsXENvbXBvbmVudHMgOVxFeGNlbCBjb21wb25lbnRzXENvbXBvbmVudHMgOVxFeGNlbCBDb21wb25lbnRzXENvbXBhcmlzb24gYmV0d2VlbiAyIGV4Y2VsIHNoZWV0cyBiYXNlZCBvbiBjb2x1bW4gbmFtZXMueGFtbKABWQObBA4CAQFiBZkEEAIBAnUJ+AMVAgETjAQJlwQUAgEIgAQNhwQWAgEDeA/wAhoCAVTyAkHyAmYCAVLiAxftAyICAUf1AhfdAyICARSNBAuRBBACAQ6SBAuWBBACAQmFBDiFBEwCAQaCBDmCBEgCAQR5EaoCHAMBhAGrAhHoAiwCAVvpAhHvAhwCAVXjAxnqAyICAU3rAxnrA5oBAgFK7AMZ7ANoAgFI/QIZ/QLXBwIBRP4CGYUDIgIBQIYDGYwDKAIBO40DGZoDKQIBOpsDGbwDJgIBJ70DGdwDHgIBFY0EGY0ENgIBD48ED48ElQECARCSBBmSBDYCAQqUBA+UBJUBAgELfROEARwDAeUBhQETjAEcAwHhAY0BE5QBHAMB3QGVAROnASgDAdUBqAETwgEjAwHJAcMBE+8BLgMBqgHwARP0ARgDAaUB9QEThwIjAwGeAYgCE6kCHgMBhQGrAsMBqwLSAQMBggGrAuABqwLzAQMBgAGxAhflAiICAVzqAhPuAhgCAVboA0ToA1ECAVDlA0XlA1QCAU7rA4YB6wOXAQIBS+wDKuwDOwIBSf0CNv0CSwIBRYMDS4MDeAIBQ4ADTIADWAIBQYoDSYoDVQIBPosDQYsDQgIBPYgDU4gDZwIBPJsDqgGbA8ABAgE5oQMfuQMqAgEovQMnvQM4AgEWvwMd0AM4AgEc0wMd2gMmAgEYjwSDAY8EkgECARGUBIMBlASSAQIBDIIBXIIBggEDAegBf11/bgMB5gGKAViKAXsDAeQBhwFZhwFpAwHiAZIBXJIBggEDAeABjwFdjwFvAwHeAZoBRJoBVwMB3AGdAUSdAUwDAdoBlQHfAZUBkgIDAdgBlQExlQFkAwHWAagBRKgBdwMB0wGuARm/ASQDAcoBwwGrAcMBuwEDAccBwwHJAcMB4AEDAcUByQEZ7AEkAwGrAfABIfABPwMBpgHyARfyAZ8BAwGnAfUBRPUBjQEDAaMB+wEZhAIkAwGfAYkCFZACHgMBmQGRAhWYAh4DAZIBmQIVoAIeAwGNAaECFagCHgMBhgGyAhnkAiYCAV3qAiHqAj4CAVfsAhfsAp4BAgFYogMhqQMqAgE1qgMhuAMmAgEpvwPbAb8D6gECASW/A/gBvwOLAgIBI8UDI80DLgIBHdgDSNgDbQIBG9UDSdUDVAIBGa8BG7YBJAMBzwG3ARu+ASQDAcsBygEb6wEoAwGsAfIBjAHyAZwBAwGoAfwBG4MCJAMBoAGOAkCOAmADAZwBiwJBiwJJAwGaAZMCQZMCTgMBkwGeAkCeAmADAZABmwJBmwJJAwGOAaMCQaMCTgMBhwGyAqUBsgK+AQIBf7gCH+ECKgIBXuwCjAHsApsBAgFZpwNMpwNcAgE4pANNpANbAgE2qgMvqgNcAgEqrAMltgMwAgErxgMlzAM6AgEetAFGtAFdAwHSAbEBR7EBTgMB0AG8AUa8AWIDAc4BuQFHuQFYAwHMAcoBpwHKAcEBAwHEAdABIegBLAMBrQGBAkaBAmEDAaIB/gFH/gFyAwGhAbkCIc0CLAIBb84CIdUCKgIBadYCIeACJgIBX60DJ60D1QICATCuAye1AzACASzJAyvJA1oCASLGA1XGA2oCASDGA8MBxgPRAQIBH9EBI9gBLAMBvwHZASPnASgDAa4BugIjwQIsAgF6wgIjzAIoAgFw0wJQ0wJcAgFt0AJR0AJxAgFq1gIv1gJDAgFg2AIl3gI5AgFjrQOzAa0DwwECATOtA84BrQPjAQIBMbMDU7MDVwIBL7ADVLADXgIBLdYBTtYBYgMBwgHTAU/TAVoDAcAB2QEx2QFOAwGvAdsBJ+UBMgMBsgG/Ak6/Al0CAX28Ak+8AloCAXvCAjHCAkUCAXHEAifKAjsCAXTYAlTYAmICAWfbAivbAloCAWbYAroB2ALHAQIBZNwBKdwB3gEDAbgB3QEp5AEyAwGzAcQCVsQCZAIBeMcCLccCXAIBd8QCvAHEAskBAgF13AFY3AFmAwG9AdwBugHcAcMBAwG7AdwBzgHcAdsBAwG5AeIBWOIBZAMBtgHfAVnfAZYBAwG0AQ==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_89" sap:VirtualizedContainerService.HintSize="264,59" />
      <sap2010:ViewStateData Id="Assign_90" sap:VirtualizedContainerService.HintSize="264,59" />
      <sap2010:ViewStateData Id="Assign_91" sap:VirtualizedContainerService.HintSize="264,59" />
      <sap2010:ViewStateData Id="FilterDataTable_3" sap:VirtualizedContainerService.HintSize="264,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_92" sap:VirtualizedContainerService.HintSize="242,59" />
      <sap2010:ViewStateData Id="Assign_93" sap:VirtualizedContainerService.HintSize="242,59" />
      <sap2010:ViewStateData Id="Sequence_107" sap:VirtualizedContainerService.HintSize="264,282">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_13" sap:VirtualizedContainerService.HintSize="264,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_94" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_20" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Assign_95" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_108" sap:VirtualizedContainerService.HintSize="336,282">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_39" sap:VirtualizedContainerService.HintSize="464,425">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_109" sap:VirtualizedContainerService.HintSize="486,648">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_11" sap:VirtualizedContainerService.HintSize="502,779">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_110" sap:VirtualizedContainerService.HintSize="524,903">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_16" sap:VirtualizedContainerService.HintSize="264,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelCloseWorkbook_14" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_40" sap:VirtualizedContainerService.HintSize="264,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_96" sap:VirtualizedContainerService.HintSize="242,59" />
      <sap2010:ViewStateData Id="Sequence_111" sap:VirtualizedContainerService.HintSize="264,183">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_14" sap:VirtualizedContainerService.HintSize="264,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_99" sap:VirtualizedContainerService.HintSize="242,59" />
      <sap2010:ViewStateData Id="Assign_117" sap:VirtualizedContainerService.HintSize="242,59" />
      <sap2010:ViewStateData Id="Assign_105" sap:VirtualizedContainerService.HintSize="242,59" />
      <sap2010:ViewStateData Id="Assign_118" sap:VirtualizedContainerService.HintSize="242,59" />
      <sap2010:ViewStateData Id="Sequence_112" sap:VirtualizedContainerService.HintSize="264,480">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_113" sap:VirtualizedContainerService.HintSize="414,1346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_133" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_30" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_59" sap:VirtualizedContainerService.HintSize="464,203" />
      <sap2010:ViewStateData Id="Sequence_149" sap:VirtualizedContainerService.HintSize="486,426">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_134" sap:VirtualizedContainerService.HintSize="486,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_31" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_60" sap:VirtualizedContainerService.HintSize="486,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_150" sap:VirtualizedContainerService.HintSize="508,738">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_21" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_122" sap:VirtualizedContainerService.HintSize="222,173">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_17" sap:VirtualizedContainerService.HintSize="414,282">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelCloseWorkbook_15" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_43" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_123" sap:VirtualizedContainerService.HintSize="414,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_124" sap:VirtualizedContainerService.HintSize="436,1881">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildDataTable_1" sap:VirtualizedContainerService.HintSize="681,59" />
      <sap2010:ViewStateData Id="Assign_124" sap:VirtualizedContainerService.HintSize="681,59" />
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="681,127" />
      <sap2010:ViewStateData Id="Assign_125" sap:VirtualizedContainerService.HintSize="242,59" />
      <sap2010:ViewStateData Id="Sequence_140" sap:VirtualizedContainerService.HintSize="264,183">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CommentOut_1" sap:VirtualizedContainerService.HintSize="681,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_126" sap:VirtualizedContainerService.HintSize="464,59" />
      <sap2010:ViewStateData Id="AddDataColumn`1_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_127" sap:VirtualizedContainerService.HintSize="242,59" />
      <sap2010:ViewStateData Id="Sequence_141" sap:VirtualizedContainerService.HintSize="264,245">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_51" sap:VirtualizedContainerService.HintSize="464,388" />
      <sap2010:ViewStateData Id="Sequence_142" sap:VirtualizedContainerService.HintSize="486,611">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_18" sap:VirtualizedContainerService.HintSize="681,742">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteRange_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_143" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_18" sap:VirtualizedContainerService.HintSize="414,320">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_128" sap:VirtualizedContainerService.HintSize="242,59" />
      <sap2010:ViewStateData Id="If_52" sap:VirtualizedContainerService.HintSize="681,463" />
      <sap2010:ViewStateData Id="Sequence_144" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_28">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">0,225.5</av:Point>
            <av:Size x:Key="ShapeSize">200,49</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">100,304.5 100,346.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_120" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_137" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_27">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">420,225.5</av:Point>
            <av:Size x:Key="ShapeSize">200,49</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_1" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">265,206.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">265,250 200,250</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">335,250 420,250</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_26">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,115.5</av:Point>
            <av:Size x:Key="ShapeSize">200,49</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,164.5 300,206.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_3" sap:VirtualizedContainerService.HintSize="684,780">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,115.5</av:PointCollection>
            <x:Double x:Key="Height">744.5</x:Double>
            <x:Double x:Key="Width">670</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,59" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="688,20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelCloseWorkbook_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelCloseWorkbook_2" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,203">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="702,998">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="724,1122">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_2" sap:VirtualizedContainerService.HintSize="764,1202" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>